{"version":3,"file":"smart_listing.modern.js","sources":["../app/javascript/smart_listing/registry.js","../app/javascript/smart_listing/actions.js","../app/javascript/smart_listing/controllers/main/base.js","../app/javascript/smart_listing/events.js","../app/javascript/smart_listing/controllers/controls/base.js","../app/javascript/smart_listing/index.js","../app/javascript/smart_listing/controllers/main/tailwind.js","../app/javascript/smart_listing/controllers/controls/tailwind.js"],"sourcesContent":["class SmartListingRegistry {\n  static registryList = {};\n\n  static register(name, controllerInstance) {\n    this.registryList[name] = controllerInstance;\n  }\n\n  static get(name) {\n    return this.registryList[name];\n  }\n}\n\nexport default SmartListingRegistry;\n","export const actionNames = {\n  REPLACE: 'replace',\n  REMOVE: 'remove',\n};\n\nexport const actionsList = {\n  reloadList: (target, template) => {\n    if (target && template) {\n      return (target.innerHTML = template.innerHTML);\n    }\n    throw new Error(`Target: ${target}, template: ${template}`);\n  },\n  remove: (target) => {\n    if (target) {\n      return target.remove();\n    }\n    throw new Error(`Target: ${target}`);\n  },\n};\n","import { Controller } from '@hotwired/stimulus';\nimport Registry from '../../registry';\nimport { dispatchBeforeSendEvent, dispatchAfterCompleteEvent } from '../../events';\nimport { actionNames, actionsList } from '../../actions';\n\nconst STATUS_OK = 'OK';\n\nexport default class extends Controller {\n  static values = { name: String };\n\n  connect() {\n    Registry.register(this.nameValue, this);\n  }\n\n  beforeSend(e) {\n    console.log('smart_listing: before', e);\n\n    switch(e.type) {\n      case 'ajax:beforeSend':\n        e.detail[0].setRequestHeader('Accept', 'text/vnd.smart-listing-remote.html');\n        break;\n      case 'turbo:before-fetch-request':\n        Turbo.navigator.history.replace(new URL(e.detail.url))\n        break;\n    }\n\n    dispatchBeforeSendEvent(this.element);\n\n    return true;\n  }\n\n  performAction(action, target, template) {\n    switch (action) {\n      case actionNames.REPLACE:\n        return actionsList.reloadList(target, template);\n      case actionNames.REMOVE:\n        return actionsList.remove(target);\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n  }\n\n  update(e) {\n    console.log('smart_listing: update', e);\n    if(e.type == 'ajax:complete') {\n      // UJS mode\n      const [xhr, status] = e.detail;\n\n      if (status === STATUS_OK) {\n        const parser = new DOMParser();\n        const tempDoc = parser.parseFromString(xhr.response, 'text/html');\n\n        const smartListingActionNodes = tempDoc.querySelectorAll('smart-listing-action');\n\n        smartListingActionNodes.forEach((element) => {\n          const actionName = element.getAttribute('name');\n          const targetId = element.getAttribute('target');\n          const target = document.getElementById(`${targetId}`);\n          const template = element.querySelector('template');\n\n          this.performAction(actionName, target, template);\n        });\n      } else {\n        console.error(`Status ${xhr.status}`);\n      }\n    }\n\n    dispatchAfterCompleteEvent(this.element);\n  }\n}\n","export const eventsName = {\n  BEFORE_SEND: 'beforesend',\n  AFTER_COMPLETE: 'aftercomplete',\n};\n\nexport const dispatchBeforeSendEvent = (htmlElement) => {\n  const beforeSendEvent = new Event(eventsName.BEFORE_SEND);\n  htmlElement.dispatchEvent(beforeSendEvent);\n};\n\nexport const dispatchAfterCompleteEvent = (htmlElement) => {\n  const afterCompleteEvent = new Event(eventsName.AFTER_COMPLETE);\n  htmlElement.dispatchEvent(afterCompleteEvent);\n};\n","import { Controller } from '@hotwired/stimulus';\nimport debounce from 'lodash/debounce';\n\nexport default class extends Controller {\n  static targets = ['observable'];\n\n  initialize() {\n    this.refresh = debounce(this.refresh, 500).bind(this)\n  }\n\n  connect() {\n    //document.addEventListener('turbo:submit-start', this.appendTurboToHeaders);\n  }\n\n  disconnect() {\n    //window.removeEventListener('turbo:submit-start', this.appendTurboToHeaders);\n  }\n\n  //beforeSend(e) {\n    //console.log('beforeSend');\n    //console.log(e.detail);\n    //debugger;\n    //headers[\"Accept\"] = [ StreamMessage.contentType, headers[\"Accept\"] ].join(\", \")\n  //}\n\n  refresh(e) {\n    console.log('smart listing controls: refresh', e);\n    this.element.requestSubmit();\n  }\n\n  //appendTurboToHeaders(e) {\n    //console.log('append');\n    //console.log(e);\n  //}\n}\n","import MainBaseController from './controllers/main/base';\nimport MainTailwindController from './controllers/main/tailwind';\nimport ControlsBaseController from './controllers/controls/base';\nimport ControlsTailwindController from './controllers/controls/tailwind';\nimport Registry from './registry';\nimport { actionsList } from './actions';\n\nconst SmartListing = {\n  controllers: {\n    main: {\n      base: MainBaseController,\n      tailwind: MainTailwindController\n    },\n    controls: {\n      base: ControlsBaseController,\n      tailwind: ControlsTailwindController\n    }\n  },\n  registry: Registry,\n  actions: actionsList,\n};\n\nwindow.SmartListing = SmartListing;\n\nexport default SmartListing;\n","import BaseController from './base';\nimport { eventsName } from '../../events';\n\nexport default class TailwindSmartListingController extends BaseController {\n  connect() {\n    super.connect();\n\n    console.log('hello from tailwind controller');\n\n    this.element.addEventListener(eventsName.BEFORE_SEND, (e) => {\n      e.target.classList.add('opacity-25', 'pointer-events-none', 'transition-opacity');\n    });\n    this.element.addEventListener(eventsName.AFTER_COMPLETE, (e) => {\n      e.target.classList.remove('opacity-25', 'pointer-events-none');\n    });\n  }\n}\n","import BaseController from './base';\n\nexport default class extends BaseController {\n}\n"],"names":["SmartListingRegistry","[object Object]","name","controllerInstance","this","registryList","actionsList","reloadList","target","template","innerHTML","Error","remove","Controller","connect","Registry","register","nameValue","beforeSend","e","console","log","type","detail","setRequestHeader","Turbo","navigator","history","replace","URL","url","htmlElement","beforeSendEvent","Event","dispatchEvent","dispatchBeforeSendEvent","element","performAction","action","update","xhr","status","DOMParser","parseFromString","response","querySelectorAll","forEach","actionName","getAttribute","targetId","document","getElementById","querySelector","error","afterCompleteEvent","dispatchAfterCompleteEvent","values","String","initialize","refresh","debounce","bind","disconnect","requestSubmit","targets","SmartListing","controllers","main","base","MainBaseController","tailwind","BaseController","super","addEventListener","classList","add","controls","ControlsBaseController","registry","actions","window"],"mappings":"+EAAA,MAAMA,EAGWC,gBAACC,EAAMC,GACpBC,KAAKC,aAAaH,GAAQC,EAGlBF,WAACC,GACT,YAAYG,aAAaH,IARvBF,EACGK,aAAe,SCIXC,EAAc,CACzBC,WAAY,CAACC,EAAQC,KACnB,GAAID,GAAUC,EACZ,OAAQD,EAAOE,UAAYD,EAASC,UAEtC,UAAUC,MAAO,WAAUH,gBAAqBC,MAElDG,OAASJ,IACP,GAAIA,EACF,OAAOA,EAAOI,SAEhB,UAAUD,MAAO,WAAUH,uBCTFK,EAG3BC,UACEC,EAASC,SAASZ,KAAKa,UAAWb,MAGpCc,WAAWC,GAGT,OAFAC,QAAQC,IAAI,wBAAyBF,GAE9BA,EAAEG,MACP,IAAK,kBACHH,EAAEI,OAAO,GAAGC,iBAAiB,SAAU,sCACvC,MACF,IAAK,6BACHC,MAAMC,UAAUC,QAAQC,QAAQ,IAAIC,IAAIV,EAAEI,OAAOO,MAMrD,MCvBoCC,CAAAA,IACtC,MAAMC,EAAkB,IAAIC,MALf,cAMbF,EAAYG,cAAcF,IDmBxBG,CAAwB/B,KAAKgC,YAK/BC,cAAcC,EAAQ9B,EAAQC,GAC5B,OAAQ6B,GACN,IDhCK,UCiCH,OAAOhC,EAAYC,WAAWC,EAAQC,GACxC,IDjCI,SCkCF,OAAOH,EAAYM,OAAOJ,GAC5B,QACE,UAAUG,MAAO,mBAAkB2B,MAIzCC,OAAOpB,GAEL,GADAC,QAAQC,IAAI,wBAAyBF,GACxB,iBAAVA,EAAEG,KAAyB,CAE5B,MAAOkB,EAAKC,GAAUtB,EAAEI,OAzCZ,OA2CRkB,GACa,IAAIC,WACIC,gBAAgBH,EAAII,SAAU,aAEbC,iBAAiB,wBAEjCC,QAASV,IAC/B,MAAMW,EAAaX,EAAQY,aAAa,QAClCC,EAAWb,EAAQY,aAAa,UAChCxC,EAAS0C,SAASC,eAAgB,GAAEF,KACpCxC,EAAW2B,EAAQgB,cAAc,YAEvChD,KAAKiC,cAAcU,EAAYvC,EAAQC,KAGzCW,QAAQiC,MAAO,UAASb,EAAIC,UCrDOV,CAAAA,IACzC,MAAMuB,EAAqB,IAAIrB,MATf,iBAUhBF,EAAYG,cAAcoB,IDuDxBC,CAA2BnD,KAAKgC,YA3D3BoB,OAAS,CAAEtD,KAAMuD,wBELG5C,EAG3B6C,aACEtD,KAAKuD,QAAUC,EAASxD,KAAKuD,QAAS,KAAKE,KAAKzD,MAGlDU,WAIAgD,cAWAH,QAAQxC,GACNC,QAAQC,IAAI,kCAAmCF,GAC/Cf,KAAKgC,QAAQ2B,mBAvBRC,QAAU,CAAC,cCGdC,MAAAA,EAAe,CACnBC,YAAa,CACXC,KAAM,CACJC,KAAMC,EACNC,uBCRsDC,EAC1DzD,UACE0D,MAAM1D,UAENM,QAAQC,IAAI,kCAEZjB,KAAKgC,QAAQqC,iBHRF,aGQ4CtD,IACrDA,EAAEX,OAAOkE,UAAUC,IAAI,aAAc,sBAAuB,wBAE9DvE,KAAKgC,QAAQqC,iBHVC,gBGU4CtD,IACxDA,EAAEX,OAAOkE,UAAU9D,OAAO,aAAc,4BDA1CgE,SAAU,CACRR,KAAMS,EACNP,uBEbuBC,MFgB3BO,SAAU/D,EACVgE,QAASzE,GAGX0E,OAAOf,aAAeA"}