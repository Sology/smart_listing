{"version":3,"file":"smart_listing.modern.js","sources":["../app/javascript/smart_listing/registry.js","../app/javascript/smart_listing/actions.js","../app/javascript/smart_listing/controllers/base.js","../app/javascript/smart_listing/events.js","../app/javascript/smart_listing/index.js","../app/javascript/smart_listing/controllers/tailwind.js"],"sourcesContent":["class SmartListingRegistry {\n  static registryList = {};\n\n  static register(name, controllerInstance) {\n    this.registryList[name] = controllerInstance;\n  }\n\n  static get(name) {\n    return this.registryList[name];\n  }\n}\n\nexport default SmartListingRegistry;\n","export const actionNames = {\n  REPLACE: 'replace',\n  REMOVE: 'remove',\n};\n\nexport const actionsList = {\n  reloadList: (target, template) => {\n    if (target && template) {\n      return (target.innerHTML = template.innerHTML);\n    }\n    throw new Error(`Target: ${target}, template: ${template}`);\n  },\n  remove: (target) => {\n    if (target) {\n      return target.remove();\n    }\n    throw new Error(`Target: ${target}`);\n  },\n};\n","import { Controller } from 'stimulus';\nimport Registry from '../registry';\nimport { dispatchBeforeSendEvent, dispatchAfterCompleteEvent } from '../events';\nimport { actionNames, actionsList } from '../actions';\n\nconst STATUS_OK = 'OK';\n\nexport default class extends Controller {\n  static values = { name: String };\n\n  connect() {\n    // debugger;\n    Registry.register(this.nameValue, this);\n  }\n\n  beforeSend(e) {\n    console.log('before');\n    e.detail[0].setRequestHeader('Accept', 'text/vnd.smart-listing-remote.html');\n\n    dispatchBeforeSendEvent(this.element);\n\n    return true;\n  }\n\n  performAction(action, target, template) {\n    switch (action) {\n      case actionNames.REPLACE:\n        return actionsList.reloadList(target, template);\n      case actionNames.REMOVE:\n        return actionsList.remove(target);\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n  }\n\n  update(e) {\n    console.log('update');\n    const [xhr, status] = e.detail;\n\n    if (status === STATUS_OK) {\n      const parser = new DOMParser();\n      const tempDoc = parser.parseFromString(xhr.response, 'text/html');\n\n      const smartListingActionNodes = tempDoc.querySelectorAll('smart-listing-action');\n\n      smartListingActionNodes.forEach((element) => {\n        const actionName = element.getAttribute('name');\n        const targetId = element.getAttribute('target');\n        const target = document.getElementById(`${targetId}`);\n        const template = element.querySelector('template');\n\n        this.performAction(actionName, target, template);\n      });\n    } else {\n      console.error(`Status ${xhr.status}`);\n    }\n\n    dispatchAfterCompleteEvent(this.element);\n  }\n}\n","export const eventsName = {\n  BEFORE_SEND: 'beforesend',\n  AFTER_COMPLETE: 'aftercomplete',\n};\n\nexport const dispatchBeforeSendEvent = (htmlElement) => {\n  const beforeSendEvent = new Event(eventsName.BEFORE_SEND);\n  htmlElement.dispatchEvent(beforeSendEvent);\n};\n\nexport const dispatchAfterCompleteEvent = (htmlElement) => {\n  const afterCompleteEvent = new Event(eventsName.AFTER_COMPLETE);\n  htmlElement.dispatchEvent(afterCompleteEvent);\n};\n","import BaseController from './controllers/base';\nimport TailwindController from './controllers/tailwind';\nimport Registry from './registry';\nimport { actionsList } from './actions';\n\nconst SmartListing = {\n  controllers: {\n    base: BaseController,\n    tailwind: TailwindController,\n  },\n  registry: Registry,\n  actions: actionsList,\n};\n\nwindow.SmartListing = SmartListing;\n\nexport default SmartListing;\n","import BaseController from './base';\nimport { eventsName } from '../events';\n\nexport default class TailwindSmartListingController extends BaseController {\n  connect() {\n    super.connect();\n\n    console.log('hello from tailwind controller');\n\n    this.element.addEventListener(eventsName.BEFORE_SEND, (e) => {\n      e.target.classList.add('opacity-20', 'pointer-events-none', 'transition-opacity');\n    });\n    this.element.addEventListener(eventsName.AFTER_COMPLETE, (e) => {\n      e.target.classList.remove('opacity-20', 'pointer-events-none');\n    });\n  }\n}\n"],"names":["SmartListingRegistry","[object Object]","name","controllerInstance","this","registryList","actionsList","reloadList","target","template","innerHTML","Error","remove","Controller","connect","Registry","register","nameValue","beforeSend","e","console","log","detail","setRequestHeader","htmlElement","beforeSendEvent","Event","dispatchEvent","dispatchBeforeSendEvent","element","performAction","action","update","xhr","status","DOMParser","parseFromString","response","querySelectorAll","forEach","actionName","getAttribute","targetId","document","getElementById","querySelector","error","afterCompleteEvent","dispatchAfterCompleteEvent","values","String","SmartListing","controllers","base","BaseController","tailwind","super","addEventListener","classList","add","registry","actions","window"],"mappings":"sCAAA,MAAMA,EAGWC,gBAACC,EAAMC,GACpBC,KAAKC,aAAaH,GAAQC,EAGlBF,WAACC,GACT,YAAYG,aAAaH,IARvBF,EACGK,aAAe,SCIXC,EAAc,CACzBC,WAAY,CAACC,EAAQC,KACnB,GAAID,GAAUC,EACZ,OAAQD,EAAOE,UAAYD,EAASC,UAEtC,UAAUC,MAAO,WAAUH,gBAAqBC,MAElDG,OAASJ,IACP,GAAIA,EACF,OAAOA,EAAOI,SAEhB,UAAUD,MAAO,WAAUH,uBCTFK,EAG3BC,UAEEC,EAASC,SAASZ,KAAKa,UAAWb,MAGpCc,WAAWC,GAMT,OALAC,QAAQC,IAAI,UACZF,EAAEG,OAAO,GAAGC,iBAAiB,SAAU,sCCZHC,CAAAA,IACtC,MAAMC,EAAkB,IAAIC,MALf,cAMbF,EAAYG,cAAcF,IDYxBG,CAAwBxB,KAAKyB,YAK/BC,cAAcC,EAAQvB,EAAQC,GAC5B,OAAQsB,GACN,IDzBK,UC0BH,OAAOzB,EAAYC,WAAWC,EAAQC,GACxC,ID1BI,SC2BF,OAAOH,EAAYM,OAAOJ,GAC5B,QACE,UAAUG,MAAO,mBAAkBoB,MAIzCC,OAAOb,GACLC,QAAQC,IAAI,UACZ,MAAOY,EAAKC,GAAUf,EAAEG,OAhCV,OAkCVY,GACa,IAAIC,WACIC,gBAAgBH,EAAII,SAAU,aAEbC,iBAAiB,wBAEjCC,QAASV,IAC/B,MAAMW,EAAaX,EAAQY,aAAa,QAClCC,EAAWb,EAAQY,aAAa,UAChCjC,EAASmC,SAASC,eAAgB,GAAEF,KACpCjC,EAAWoB,EAAQgB,cAAc,YAEvCzC,KAAK0B,cAAcU,EAAYhC,EAAQC,KAGzCW,QAAQ0B,MAAO,UAASb,EAAIC,UC5CSV,CAAAA,IACzC,MAAMuB,EAAqB,IAAIrB,MATf,iBAUhBF,EAAYG,cAAcoB,ID6CxBC,CAA2B5C,KAAKyB,YAjD3BoB,OAAS,CAAE/C,KAAMgD,QEHpBC,MAAAA,EAAe,CACnBC,YAAa,CACXC,KAAMC,EACNC,uBCLwDD,EAC1DxC,UACE0C,MAAM1C,UAENM,QAAQC,IAAI,kCAEZjB,KAAKyB,QAAQ4B,iBFRF,aEQ4CtC,IACrDA,EAAEX,OAAOkD,UAAUC,IAAI,aAAc,sBAAuB,wBAE9DvD,KAAKyB,QAAQ4B,iBFVC,gBEU4CtC,IACxDA,EAAEX,OAAOkD,UAAU9C,OAAO,aAAc,4BDH5CgD,SAAU7C,EACV8C,QAASvD,GAGXwD,OAAOX,aAAeA"}