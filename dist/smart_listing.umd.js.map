{"version":3,"file":"smart_listing.umd.js","sources":["../app/javascript/smart_listing/registry.js","../app/javascript/smart_listing/events.js","../app/javascript/smart_listing/actions.js","../app/javascript/smart_listing/controllers/main/base.js","../app/javascript/smart_listing/controllers/main/tailwind.js","../app/javascript/smart_listing/controllers/controls/base.js","../app/javascript/smart_listing/index.js","../app/javascript/smart_listing/controllers/controls/tailwind.js"],"sourcesContent":["class SmartListingRegistry {\n  static registryList = {};\n\n  static register(name, controllerInstance) {\n    this.registryList[name] = controllerInstance;\n  }\n\n  static get(name) {\n    return this.registryList[name];\n  }\n}\n\nexport default SmartListingRegistry;\n","export const eventsName = {\n  BEFORE_SEND: 'beforesend',\n  AFTER_COMPLETE: 'aftercomplete',\n};\n\nexport const dispatchBeforeSendEvent = (htmlElement) => {\n  const beforeSendEvent = new Event(eventsName.BEFORE_SEND);\n  htmlElement.dispatchEvent(beforeSendEvent);\n};\n\nexport const dispatchAfterCompleteEvent = (htmlElement) => {\n  const afterCompleteEvent = new Event(eventsName.AFTER_COMPLETE);\n  htmlElement.dispatchEvent(afterCompleteEvent);\n};\n","export const actionNames = {\n  REPLACE: 'replace',\n  REMOVE: 'remove',\n};\n\nexport const actionsList = {\n  reloadList: (target, template) => {\n    if (target && template) {\n      return (target.innerHTML = template.innerHTML);\n    }\n    throw new Error(`Target: ${target}, template: ${template}`);\n  },\n  remove: (target) => {\n    if (target) {\n      return target.remove();\n    }\n    throw new Error(`Target: ${target}`);\n  },\n};\n","import { Controller } from '@hotwired/stimulus';\nimport Registry from '../../registry';\nimport { dispatchBeforeSendEvent, dispatchAfterCompleteEvent } from '../../events';\nimport { actionNames, actionsList } from '../../actions';\n\nconst STATUS_OK = 'OK';\n\nexport default class extends Controller {\n  static values = { name: String };\n\n  connect() {\n    Registry.register(this.nameValue, this);\n  }\n\n  beforeSend(e) {\n    console.log('before', e);\n\n    switch(e.type) {\n      case 'ajax:beforeSend':\n        e.detail[0].setRequestHeader('Accept', 'text/vnd.smart-listing-remote.html');\n        break;\n      case 'turbo:before-fetch-request':\n        Turbo.navigator.history.push(new URL(e.detail.url))\n        break;\n    }\n\n    dispatchBeforeSendEvent(this.element);\n\n    return true;\n  }\n\n  performAction(action, target, template) {\n    switch (action) {\n      case actionNames.REPLACE:\n        return actionsList.reloadList(target, template);\n      case actionNames.REMOVE:\n        return actionsList.remove(target);\n      default:\n        throw new Error(`Unknown action: ${action}`);\n    }\n  }\n\n  update(e) {\n    console.log('update', e);\n    if(e.type == 'ajax:complete') {\n      // UJS mode\n      const [xhr, status] = e.detail;\n\n      if (status === STATUS_OK) {\n        const parser = new DOMParser();\n        const tempDoc = parser.parseFromString(xhr.response, 'text/html');\n\n        const smartListingActionNodes = tempDoc.querySelectorAll('smart-listing-action');\n\n        smartListingActionNodes.forEach((element) => {\n          const actionName = element.getAttribute('name');\n          const targetId = element.getAttribute('target');\n          const target = document.getElementById(`${targetId}`);\n          const template = element.querySelector('template');\n\n          this.performAction(actionName, target, template);\n        });\n      } else {\n        console.error(`Status ${xhr.status}`);\n      }\n    }\n\n    dispatchAfterCompleteEvent(this.element);\n  }\n}\n","import BaseController from './base';\nimport { eventsName } from '../../events';\n\nexport default class TailwindSmartListingController extends BaseController {\n  connect() {\n    super.connect();\n\n    console.log('hello from tailwind controller');\n\n    this.element.addEventListener(eventsName.BEFORE_SEND, (e) => {\n      e.target.classList.add('opacity-25', 'pointer-events-none', 'transition-opacity');\n    });\n    this.element.addEventListener(eventsName.AFTER_COMPLETE, (e) => {\n      e.target.classList.remove('opacity-25', 'pointer-events-none');\n    });\n  }\n}\n","import { Controller } from '@hotwired/stimulus';\nimport debounce from 'lodash/debounce';\n\nexport default class extends Controller {\n  static targets = ['observable'];\n\n  initialize() {\n    this.refresh = debounce(this.refresh, 500).bind(this)\n  }\n\n  connect() {\n    //document.addEventListener('turbo:submit-start', this.appendTurboToHeaders);\n  }\n\n  disconnect() {\n    //window.removeEventListener('turbo:submit-start', this.appendTurboToHeaders);\n  }\n\n  //beforeSend(e) {\n    //console.log('beforeSend');\n    //console.log(e.detail);\n    //debugger;\n    //headers[\"Accept\"] = [ StreamMessage.contentType, headers[\"Accept\"] ].join(\", \")\n  //}\n\n  refresh(e) {\n    console.log('refresh');\n    this.element.requestSubmit();\n  }\n\n  //appendTurboToHeaders(e) {\n    //console.log('append');\n    //console.log(e);\n  //}\n}\n","import MainBaseController from './controllers/main/base';\nimport MainTailwindController from './controllers/main/tailwind';\nimport ControlsBaseController from './controllers/controls/base';\nimport ControlsTailwindController from './controllers/controls/tailwind';\nimport Registry from './registry';\nimport { actionsList } from './actions';\n\nconst SmartListing = {\n  controllers: {\n    main: {\n      base: MainBaseController,\n      tailwind: MainTailwindController\n    },\n    controls: {\n      base: ControlsBaseController,\n      tailwind: ControlsTailwindController\n    }\n  },\n  registry: Registry,\n  actions: actionsList,\n};\n\nwindow.SmartListing = SmartListing;\n\nexport default SmartListing;\n","import BaseController from './base';\n\nexport default class extends BaseController {\n}\n"],"names":["SmartListingRegistry","register","name","controllerInstance","this","registryList","get","eventsName","actionsList","reloadList","target","template","innerHTML","Error","remove","connect","Registry","nameValue","beforeSend","e","console","log","type","detail","setRequestHeader","Turbo","navigator","history","push","URL","url","htmlElement","beforeSendEvent","element","Event","dispatchEvent","performAction","action","update","afterCompleteEvent","xhr","DOMParser","parseFromString","response","querySelectorAll","forEach","actionName","getAttribute","targetId","document","getElementById","querySelector","_this","error","status","Controller","values","String","TailwindSmartListingController","_BaseController","addEventListener","classList","add","BaseController","initialize","refresh","debounce","bind","disconnect","requestSubmit","targets","SmartListing","controllers","main","base","MainBaseController","tailwind","MainTailwindController","controls","ControlsBaseController","registry","actions","window"],"mappings":"mmBAAMA,oCAGGC,SAAP,SAAgBC,EAAMC,GACpBC,KAAKC,aAAaH,GAAQC,KAGrBG,IAAP,SAAWJ,GACT,YAAYG,aAAaH,SARvBF,EACGK,aAAe,OCDXE,EACE,aADFA,EAEK,gBCGLC,EAAc,CACzBC,WAAY,SAACC,EAAQC,GACnB,GAAID,GAAUC,EACZ,OAAQD,EAAOE,UAAYD,EAASC,UAEtC,UAAUC,iBAAiBH,iBAAqBC,IAElDG,OAAQ,SAACJ,GACP,GAAIA,EACF,OAAOA,EAAOI,SAEhB,UAAUD,iBAAiBH,uGCN7BK,QAAA,WACEC,EAASf,SAASG,KAAKa,UAAWb,SAGpCc,WAAA,SAAWC,GAGT,OAFAC,QAAQC,IAAI,SAAUF,GAEfA,EAAEG,MACP,IAAK,kBACHH,EAAEI,OAAO,GAAGC,iBAAiB,SAAU,sCACvC,MACF,IAAK,6BACHC,MAAMC,UAAUC,QAAQC,KAAK,IAAIC,IAAIV,EAAEI,OAAOO,MFjBf,IAACC,EAChCC,EEsBJ,OFvBoCD,EEqBZ3B,KAAK6B,QFpBzBD,EAAkB,IAAIE,MAAM3B,GAClCwB,EAAYI,cAAcH,SEwB1BI,cAAA,SAAcC,EAAQ3B,EAAQC,GAC5B,OAAQ0B,GACN,IDhCK,UCiCH,OAAO7B,EAAYC,WAAWC,EAAQC,GACxC,IDjCI,SCkCF,OAAOH,EAAYM,OAAOJ,GAC5B,QACE,UAAUG,yBAAyBwB,OAIzCC,OAAA,SAAOnB,OFhCkCY,EACnCQ,SEiCJ,GADAnB,QAAQC,IAAI,SAAUF,GACT,iBAAVA,EAAEG,KAAyB,OAENH,EAAEI,OAAjBiB,OAzCK,aA4CK,IAAIC,WACIC,gBAAgBF,EAAIG,SAAU,aAEbC,iBAAiB,wBAEjCC,QAAQ,SAACZ,GAC/B,IAAMa,EAAab,EAAQc,aAAa,QAClCC,EAAWf,EAAQc,aAAa,UAChCrC,EAASuC,SAASC,kBAAkBF,GACpCrC,EAAWsB,EAAQkB,cAAc,YAEvCC,EAAKhB,cAAcU,EAAYpC,EAAQC,KAGzCS,QAAQiC,gBAAgBb,EAAIc,QFrDOvB,EEyDZ3B,KAAK6B,QFxD5BM,EAAqB,IAAIL,MAAM3B,GACrCwB,EAAYI,cAAcI,OELCgB,gBACpBC,OAAS,CAAEtD,KAAMuD,YCLLC,0FACnB3C,QAAA,WACE4C,YAAM5C,mBAENK,QAAQC,IAAI,kCAEZjB,KAAK6B,QAAQ2B,iBAAiBrD,EAAwB,SAACY,GACrDA,EAAET,OAAOmD,UAAUC,IAAI,aAAc,sBAAuB,wBAE9D1D,KAAK6B,QAAQ2B,iBAAiBrD,EAA2B,SAACY,GACxDA,EAAET,OAAOmD,UAAU/C,OAAO,aAAc,6BAVciD,qGCG1DC,WAAA,WACE5D,KAAK6D,QAAUC,UAAS9D,KAAK6D,QAAS,KAAKE,KAAK/D,SAGlDW,QAAA,eAIAqD,WAAA,eAWAH,QAAA,SAAQ9C,GACNC,QAAQC,IAAI,WACZjB,KAAK6B,QAAQoC,oBAxBYd,gBACpBe,QAAU,CAAC,kBCGdC,EAAe,CACnBC,YAAa,CACXC,KAAM,CACJC,KAAMC,EACNC,SAAUC,GAEZC,SAAU,CACRJ,KAAMK,EACNH,wFCbuBb,KDgB3BiB,SAAUhE,EACViE,QAASzE,UAGX0E,OAAOX,aAAeA"}